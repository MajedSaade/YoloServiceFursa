name: YoloService Deploy Prod

on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_TOKEN:
        required: true
      EC2_SSH_KEY:
        required: true
      YOLO_EC2_HOST:
        required: true
      EC2_USERNAME:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.YOLO_EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Copy configuration files
        run: |
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.YOLO_EC2_HOST }} "mkdir -p ~/yoloservice-deploy"
          scp -i ~/.ssh/id_rsa docker-compose.prod.yaml ${{ secrets.EC2_USERNAME }}@${{ secrets.YOLO_EC2_HOST }}:~/yoloservice-deploy/docker-compose.yml
          scp -i ~/.ssh/id_rsa otel-collector-config.yaml ${{ secrets.EC2_USERNAME }}@${{ secrets.YOLO_EC2_HOST }}:~/yoloservice-deploy/otel-collector-config.yaml

      - name: Deploy to EC2
        run: |
          # Set image name without space after equals and ensure proper formatting
          export IMG_NAME="${{ secrets.DOCKERHUB_USERNAME }}${{ inputs.image }}"
          
          # Use EOF without quotes to allow variable expansion
          ssh -i ~/.ssh/id_rsa ${{ secrets.EC2_USERNAME }}@${{ secrets.YOLO_EC2_HOST }} << EOF
          
          # Install Docker if not present
          if ! command -v docker &> /dev/null; then
            echo "Installing Docker..."
            
            # Update package index
            sudo apt-get update
            
            # Install prerequisites
            sudo apt-get install -y ca-certificates curl gnupg lsb-release
            
            # Add Docker's official GPG key
            sudo mkdir -m 0755 -p /etc/apt/keyrings
            curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
            
            # Set up the repository
            echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
            
            # Update package index again
            sudo apt-get update
            
            # Install Docker Engine, CLI, containerd, and Docker Compose
            sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
            
            # Start and enable Docker
            sudo systemctl start docker
            sudo systemctl enable docker
            
            # Add current user to docker group
            sudo usermod -aG docker $USER
            
            echo "Docker installation completed"
          else
            echo "Docker is already installed"
          fi

          # Install AWS CLI if not present
          if ! command -v aws &> /dev/null; then
            echo "Installing AWS CLI..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            sudo apt-get install -y unzip
            unzip awscliv2.zip
            sudo ./aws/install
            rm -rf awscliv2.zip aws/
            echo "AWS CLI installation completed"
          else
            echo "AWS CLI is already installed"
          fi

          # Navigate to deployment directory
          cd ~/yoloservice-deploy

          # Create environment file
          cat > .env << EOL
          IMG_NAME=${IMG_NAME}
          STORAGE_TYPE=dynamodb
          ENVIRONMENT=production
          STATUS_SERVER_PORT=8081
          AWS_DEFAULT_REGION=us-west-2
          DYNAMODB_TABLE_NAME=YoloService-Predictions-Prod
          EOL

          # Create DynamoDB table if it doesn't exist
          echo "Creating DynamoDB table if it doesn't exist..."
          aws dynamodb create-table \
            --table-name YoloService-Predictions-Prod \
            --attribute-definitions \
              AttributeName=uid,AttributeType=S \
            --key-schema \
              AttributeName=uid,KeyType=HASH \
            --billing-mode PAY_PER_REQUEST \
            --region us-west-2 || echo "Table already exists or creation failed - continuing..."

          # Debug: Verify what we're working with
          echo "=== Deployment Debug Info ==="
          echo "Image name: ${IMG_NAME}"
          echo "Contents of .env file:"
          cat .env
          echo "Contents of docker-compose.yml:"
          cat docker-compose.yml
          echo "=== End Debug Info ==="

          # Stop and remove all running containers
          sudo docker ps -aq | xargs -r sudo docker rm -f
          
          # Clean up unused Docker data to free space
          sudo docker system prune -a -f --volumes


          # Login to Docker Hub
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

          # Pull latest image and start services
          sudo -E docker compose pull
          sudo -E docker compose up -d

          # Cleanup old images
          sudo docker image prune -f

          echo "Deployment completed successfully!"
          EOF
